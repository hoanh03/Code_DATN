# Automatically generated tests for validation
import pytest
import dataclasses
import datetime
import typing
from source_files.validation import equal

# This file was generated by the test_case_generator

# Tests for function equal
@pytest.mark.parametrize('inputs,expected', [
    # Edge case for a=0
    ([0, 249], False),
    # Edge case for a=1
    ([1, 651], False),
    # Edge case for a=-1
    ([-1, 162], False),
    # Edge case for a=100
    ([100, -152], False),
    # Edge case for a=-100
    ([-100, -265], False),
    # Edge case for b=0
    ([249, 0], False),
    # Edge case for b=1
    ([-70, 1], False),
    # Edge case for b=-1
    ([-296, -1], False),
    # Edge case for b=100
    ([197, 100], False),
    # Edge case for b=-100
    ([-860, -100], False),
    # Test with inputs: [-818, 366]
    ([-818, 366], False),
    # Test with inputs: [-85, -654]
    ([-85, -654], False),
    # Test with inputs: [-881, 384]
    ([-881, 384], False),
    # Test with inputs: [-454, 21]
    ([-454, 21], False),
    # Test with inputs: [-804, 0]
    ([-804, 0], False),
    # Test with inputs: [924, 65]
    ([924, 65], False),
    # Test with inputs: [663, 121]
    ([663, 121], False),
    # Test with inputs: [-755, -185]
    ([-755, -185], False),
    # Test with inputs: [-499, 35]
    ([-499, 35], False),
    # Test with inputs: [991, -394]
    ([991, -394], False),
])
def test_equal(inputs, expected):
    assert equal(*inputs) == expected
